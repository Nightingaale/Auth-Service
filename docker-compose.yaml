services:
  postgres:
    container_name: postgres
    image: postgres:17.4-alpine3.20
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME:-postgres}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.1.0
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_PASSWORD}
    ports:
      - ${KC_PORT}:${KC_PORT}
    command: ["start-dev", "--http-port=${KC_PORT}"]
    depends_on:
      - redis


  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - ${RS_PORT}:${RS_PORT}
    environment:
      - REDIS_PASSWORD=${RS_PASSWORD}
    command: ["redis-server", "--requirepass", "${RS_PORT}"]
    volumes:
      - redis_data:/data/cache
    networks:
      - keycloak-network

volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local
  mongo_data:
    driver: local

networks:
  keycloak-network:
    driver: bridge